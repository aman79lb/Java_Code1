// Working program with FastReaderimport java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.util.Scanner;import java.util.StringTokenizer;public class KelemFind  {		public static void main(String[] args) {		//KelemFind s=new KelemFind();		FastReader s = new FastReader();		//int n = s.nextInt();		int k = s.nextInt();		//this program is for decending order array  where k'th index has been printing		int[] a = {23, 434, 23, 12, 11, 2, 443, 12, 233, 23, 3};		if (k > a.length - 1) {			System.out.println("no valid k");		} else {			for (int i = 0; i < a.length ; i++ ) {				for (int j = i + 1; j < a.length ; j++ ) {					if (a[i] < a[j]) {						a[i] = a[i] ^ a[j];						a[j] = a[i] ^ a[j];						a[i] = a[i] ^ a[j];					}				}				if (i == k - 1) {					System.out.println(a[i]);					break;				}			}		}	}} class FastReader {	BufferedReader br;	StringTokenizer st;	public FastReader() {		br = new BufferedReader(		    new InputStreamReader(System.in));	}	String next() {		while (st == null || !st.hasMoreElements()) {			try {				st = new StringTokenizer(br.readLine());			} catch (IOException e) {				e.printStackTrace();			}		}		return st.nextToken();	}	int nextInt() { return Integer.parseInt(next()); }	long nextLong() { return Long.parseLong(next()); }	double nextDouble() {		return Double.parseDouble(next());	}	String nextLine() {		String str = "";		try {			if (st.hasMoreTokens()) {				str = st.nextToken("\n");			} else {				str = br.readLine();			}		} catch (IOException e) {			e.printStackTrace();		}		return str;	}}